name: ci-auto-release-python

on:
  push:
    branches:
      - master

env:
  ##############################################################################
  # Please fill in:
  # Ref. https://docs.github.com/en/github-ae@latest/actions/learn-github-actions/variables
  ##############################################################################
  # Target python version intended to use to run tests into. Defaults to 3.10.2
  ##############################################################################
  TARGET_PYTHON_VERSION: 3.10.2
  ##############################################################################
  ##############################################################################
  # Target folder where tests reside. Defaults to "tests"
  ##############################################################################
  TESTS_DIRECTORY: tests
  ##############################################################################
  ##############################################################################
  # Please fill in with the Runner(s) in which to execute this action
  # Ref. https://docs.github.com/en/actions/hosting-your-own-runners/using-self-hosted-runners-in-a-workflow
  # Ref. https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners
  ############################################################################
  RUNNER: ubuntu-20.04
  ############################################################################
  

jobs:

  pre-release:

    name: Pre-Release
    runs-on: {{ '${{ env.RUNNER }}' }}
    
    ############################################################################
    # Minimum permissions required by EnricoMi/publish-unit-test-result-action@v2
    # Ref. https://github.com/EnricoMi/publish-unit-test-result-action#support-fork-repositories-and-dependabot-branches
    ############################################################################
    permissions:
          contents: write # For tags
          issues: read
          checks: write
          pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: {{ '${{ env.TARGET_PYTHON_VERSION }}' }}

      - name: Install poetry
        run: |
          python -m pip install pipx && python -m pipx install poetry

      - name: Configure poetry
        run: |
          poetry config virtualenvs.in-project true

      - name: Cache the virtualenv
        uses: actions/cache@v3
        with:
          path: ./.venv
          key: {{ '${{ runner.os }}' }}-venv-{{ '${{ hashFiles(\'**/poetry.lock\') }}' }}

      - name: Run tests
        run: |
          poetry run python -m pytest {{ '${{ env.TESTS_DIRECTORY }}' }} --doctest-modules --junit-xml=junit/ci-result-junit.xml

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: success()
        with:
          files: junit/ci-result-junit.xml
          action_fail: true
          action_fail_on_inconclusive: true

      - name: Package application
        run: |
          rm -rf dist
          poetry build

      - name: Delete latest tag
        uses: cb80/delrel@latest
        with:
          tag: latest

      - name: do-Prerelease
        uses: softprops/action-gh-release@v1
        with:
          token: {{ '${{ secrets.GITHUB_TOKEN }}' }}
          tag_name: latest
          prerelease: true
          name: Pre-release (dev build)
          generate_release_notes: true
          files: |
            {{ '${{ github.workspace }}' }}/CHANGELOG.md
            {{ '${{ github.workspace }}' }}/dist/*
